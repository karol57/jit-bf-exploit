[bits 32]
start:
mov eax, [fs:0x30] 
mov eax, [eax+0xc]
mov eax, [eax+0x14]

mov eax, [eax] ; esi Flink
mov eax, [eax] ; esi Flink
mov eax, [eax+0x10]
mov esi, eax ; esi == imagebase kernel32.dll

mov eax, [eax+0x3c] ; e_lfanew
add eax, esi
add eax, 4 + 0x14 + 0x60
mov eax, [eax]
add eax, esi ; eax == export table

mov ebx, [eax+0x1c]
add ebx, esi  ;  ebx == addr table

mov edx, [eax+0x20]
add edx, esi  ;  edx == name table

call .gimme_getprocaddress
db "GetProcAddress", 0
.gimme_getprocaddress:
pop eax  ; address string "GetProcAddress"

mov ebp, esi  ; ebp == imagebase

.find_getprocaddr:
  mov esi, [edx]
  add esi, ebp

  mov edi, eax

  mov ecx, 13
  repe cmpsb  ; memcmp("GetProcAddress", edx, 13)

  test ecx, ecx
  jz .found  

  add ebx, 4
  add edx, 4
  jmp .find_getprocaddr

.found:
add ebx, 8  ; # ????????

mov ebx, [ebx]
add ebx, ebp

; assume ebx == GetProcAddress
; assume ebp == imagebase kernel32.dll 

call .gimme_LoadLibraryA 
db "LoadLibraryA", 0
.gimme_LoadLibraryA:
push ebp
call ebx

; assume eax == LoadLibraryA

call .gimme_user32
db "user32.dll", 0
.gimme_user32:
call eax
; assume eax == imagebase user32.dll

call .gimme_messageboxa
db "MessageBoxA", 0
.gimme_messageboxa:
push eax
call ebx
; assume eax = MessageBoxA

push 0x00000020
call .gimme_caption
db "Tyle wygrac", 0
.gimme_caption:

call .gimme_text
db "Co wygralem?", 0
.gimme_text:

push 0x0 ; HWND = null
call eax